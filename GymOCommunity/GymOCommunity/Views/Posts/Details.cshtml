@model GymOCommunity.Models.Post

<div class="container py-4">
    <!-- Bài viết chính -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h2 class="card-title">@Model.Title</h2>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <small class="text-muted">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                <div>
                    <a href="/Posts/Edit/@Model.Id" class="btn btn-sm btn-outline-warning">Chỉnh sửa</a>
                    <a href="/Posts/Delete/@Model.Id" class="btn btn-sm btn-outline-danger">Xóa</a>
                </div>
            </div>

            <p class="card-text">@Model.Content</p>

            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="mt-3">
                    <img src="@Model.ImageUrl" alt="Ảnh bài viết" class="img-fluid rounded" onclick="openImageModal(this.src)" style="cursor: pointer; max-height: 500px; object-fit: contain;">
                </div>
            }

            @if ((Model.PostImages != null && Model.PostImages.Any()) || !string.IsNullOrEmpty(Model.VideoUrl) || (Model.PostVideos != null && Model.PostVideos.Any()))
            {
                <div class="mt-4">
                    <h5 class="mb-3">Xem thêm</h5>
                    <div class="row g-2">
                        @if (Model.PostImages != null && Model.PostImages.Any())
                        {
                            foreach (var img in Model.PostImages)
                            {
                                <div class="col-6 col-md-4 col-lg-3">
                                    <img src="@img.ImageUrl" alt="Ảnh phụ" class="img-thumbnail" onclick="openImageModal(this.src)" style="cursor: pointer; height: 200px; object-fit: cover;">
                                </div>
                            }
                        }

                        @if (!string.IsNullOrEmpty(Model.VideoUrl))
                        {
                            <div class="col-6 col-md-4 col-lg-3">
                                <div class="ratio ratio-16x9">
                                    <video onclick="openVideoModal('@Model.VideoUrl')" style="cursor: pointer;">
                                        <source src="@Model.VideoUrl" type="video/mp4">
                                    </video>
                                </div>
                            </div>
                        }

                        @if (Model.PostVideos != null && Model.PostVideos.Any())
                        {
                            foreach (var video in Model.PostVideos)
                            {
                                <div class="col-6 col-md-4 col-lg-3">
                                    <div class="ratio ratio-16x9">
                                        <video onclick="openVideoModal('@video.VideoUrl')" style="cursor: pointer;">
                                            <source src="@video.VideoUrl" type="video/mp4">
                                        </video>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Bình luận -->
    <div class="card shadow-sm">
        <div class="card-body">
            <h4 class="card-title mb-4">Bình luận (@Model.Comments?.Count ?? 0)</h4>

            <!-- Form thêm bình luận -->
            <form asp-action="AddComment" method="post" class="mb-4">
                <input type="hidden" name="postId" value="@Model.Id">
                <div class="mb-3">
                    <textarea name="content" class="form-control" rows="3" placeholder="Viết bình luận..." required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Gửi bình luận</button>
            </form>

            <!-- Danh sách bình luận -->
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <div class="comment-section">
                    @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                    {
                        <div class="comment-item mb-3 pb-3 border-bottom">
                            <div class="d-flex">
                                <div class="flex-shrink-0 me-3">
                                    <img src="https://ui-avatars.com/api/?name=@comment.UserName&background=random" class="rounded-circle" width="40" height="40" alt="@comment.UserName">
                                </div>
                                <div class="flex-grow-1">
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <h6 class="mb-0 fw-bold">@comment.UserName</h6>
                                        <small class="text-muted">@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                    </div>
                                    <p class="mb-2">@comment.Content</p>
                                    <div class="comment-actions">
                                        <form asp-action="LikeComment" asp-controller="Comment" asp-route-id="@comment.Id" method="post" class="d-inline like-form">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="commentId" value="@comment.Id">
                                            <button type="submit" class="btn btn-sm btn-outline-secondary like-btn">
                                                <i class="far fa-thumbs-up"></i>
                                                <span class="like-count">@comment.Likes</span>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-3 text-muted">
                    Chưa có bình luận nào. Hãy là người đầu tiên bình luận!
                </div>
            }
        </div>
    </div>

    <div class="mt-3">
        <a href="/Posts" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Quay lại danh sách
        </a>
    </div>
</div>

<!-- Modal xem ảnh -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content bg-transparent border-0">
            <div class="modal-header border-0">
                <button type="button" class="btn-close btn-close-white" onclick="closeImageModal()" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" class="img-fluid" style="max-height: 80vh;">
            </div>
            <div class="modal-footer border-0 justify-content-between">
                <button type="button" class="btn btn-outline-light" onclick="showPrevImage()">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button type="button" class="btn btn-outline-light" onclick="showNextImage()">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal xem video -->
<div class="modal fade" id="videoModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-transparent border-0">
            <div class="modal-header border-0">
                <button type="button" class="btn-close btn-close-white" onclick="closeVideoModal()" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <video id="modalVideo" class="w-100" controls></video>
            </div>
        </div>
    </div>
</div>

 @section Styles {
    <style>
        .comment-item {
            transition: all 0.2s;
        }

            .comment-item:hover {
                background-color: #2c2c2c;
                border-radius: 5px;
            }

            .comment-item small {
                color: white !important;
            }

        .comment-actions .btn {
            padding: 0.15rem 0.5rem;
            font-size: 0.8rem;
        }

        .card {
            border-radius: 10px;
            overflow: hidden;
        }

        .img-thumbnail {
            transition: transform 0.2s;
        }

            .img-thumbnail:hover {
                transform: scale(1.03);
            }

        #imageModal .modal-content,
        #videoModal .modal-content {
            background-color: rgba(0, 0, 0, 0.8);
        }

        /* Style cho nút like */
        .like-btn.liked {
            color: #0d6efd !important;
            border-color: #0d6efd !important;
        }

        .like-btn i {
            transition: all 0.3s;
        }

        .like-btn.liked i {
            transform: scale(1.2);
        }
    </style>
}

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script>
        // Xử lý modal ảnh/video
        let currentImageIndex = 0;
        let imageList = [];

        function openImageModal(src) {
            imageList = Array.from(document.querySelectorAll("img[onclick^='openImageModal']"));
            currentImageIndex = imageList.findIndex(img => img.src === src);
            document.getElementById('modalImage').src = src;
            var modal = new bootstrap.Modal(document.getElementById('imageModal'));
            modal.show();
        }

        function closeImageModal() {
            var modal = bootstrap.Modal.getInstance(document.getElementById('imageModal'));
            modal.hide();
        }

        function showNextImage() {
            if (imageList.length === 0) return;
            currentImageIndex = (currentImageIndex + 1) % imageList.length;
            document.getElementById('modalImage').src = imageList[currentImageIndex].src;
        }

        function showPrevImage() {
            if (imageList.length === 0) return;
            currentImageIndex = (currentImageIndex - 1 + imageList.length) % imageList.length;
            document.getElementById('modalImage').src = imageList[currentImageIndex].src;
        }

        function openVideoModal(src) {
            const video = document.getElementById('modalVideo');
            video.src = src;
            video.load(); // reset thời gian phát
            var modal = new bootstrap.Modal(document.getElementById('videoModal'));
            modal.show();
            video.play();
        }

        function closeVideoModal() {
            const video = document.getElementById('modalVideo');
            video.pause();
            video.currentTime = 0;
            video.src = "";
            var modal = bootstrap.Modal.getInstance(document.getElementById('videoModal'));
            modal.hide();
        }

        // Auto stop video when modal is hidden (kể cả nhấn ESC hoặc click ra ngoài)
        document.getElementById('videoModal').addEventListener('hidden.bs.modal', function () {
            const video = document.getElementById('modalVideo');
            video.pause();
            video.currentTime = 0;
            video.src = "";
        });

        // Xử lý like bằng AJAX
        document.querySelectorAll('.like-form').forEach(form => {
            form.addEventListener('submit', async function (e) {
                e.preventDefault();

                const form = this;
                const button = form.querySelector('.like-btn');
                const likeCount = form.querySelector('.like-count');
                const icon = form.querySelector('i');

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value,
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: `commentId=${form.querySelector('input[name="commentId"]').value}`
                    });

                    if (response.ok) {
                        const data = await response.json();

                        likeCount.textContent = data.newLikeCount;
                        button.classList.add('liked');
                        icon.classList.replace('far', 'fas');

                        setTimeout(() => {
                            button.classList.remove('liked');
                        }, 1000);
                    } else {
                        console.error('Like failed:', response.status);
                        form.submit();
                    }
                } catch (error) {
                    console.error('Error:', error);
                    form.submit();
                }
            });
        });

        // Phím tắt ESC cho ảnh
        document.addEventListener('keydown', function (e) {
            if (document.getElementById('imageModal').classList.contains('show')) {
                if (e.key === 'ArrowRight') {
                    showNextImage();
                } else if (e.key === 'ArrowLeft') {
                    showPrevImage();
                } else if (e.key === 'Escape') {
                    closeImageModal();
                }
            }
        });
    </script>
}

}